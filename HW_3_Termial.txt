JSON
 4. Создать внешний репозиторий c названием JSON.
Создаем :)
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/ArtyomMarfin/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json

 7. Добавить файл под гит.
git add new.json

 8. Закоммитить файл.
git commit -m "First commit JSON"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
cat >> new.json
{ 
 "ФИО": "Марфин Артём Павлович", 
 "Дата рождения": "18.04.1986", 
 "Количество домашних животных": "0", 
 "будущая желаемая зарплата": "1*10^5" 
 } 

 11. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "add text"
git push

 12. Создать файл preferences.json
touch references.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
cat >> preferences.json
{ 
 "Любимый фильм": "Остров проклятых", 
 "любимый сериал": "Друзья", 
 "любимая еда": "завтрак: овсянка, яйца, сыр", 
 "любимое время года": "Весна", 
 "сторона которую хотели бы посетить": "Все" 
 } 

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch sklls.json
cat >> sklls.json
{ 
 "Скиллы, которые будут изучены на курсе": 
 { "1.": "Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC",
"2.": "Что такое клиент-серверная архитектура.",
"3.": "HTTP Методы запросов на сервер.",
"4.": "Коды ответов HTTP сервера.",
"5.": "Структуры HTTP запросов и ответов.",
"6.": "Что такое JSON, XML. Их структура.",
"7.": "Тестирование API через Postman (JS, автотесты API).",
"8.": "Снятие и чтение логов c внешнего сервера.",
"9.": "Снифинг http web трафика через Charles и Fiddler.",
"10.": "Dev Tools веб браузеров (Google Chrome, FireFox).",
"11.": "VPN. (Как работает, зачем нужен, как использовать, варианты инструментов).",
"12.": "Мобильное тестирование.",
"13.": "Особенность iOS, Android, гайдлайны.",
"14.": "Сборка iOS приложений на XCode.",
"15.": "Сборка Android приложений на Android Studio.",
"16.": "ADB (управление андройд девайсами).",
"17.": "Настройка прокси и vpn на iOS и Android.",
"18.": "Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.",
"19.": "Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса).",
"20.": "Основы bash скриптинг, автоматизация рутинных задач на сервере.",
"21.": "Доступ к удалённым серверам.",
"22.": "Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).",
"23.": "База данных Postgres (установка, настройка и использование).",
"24.": "Нереляционная база данных Redis (установка, настройка и использование).",
"25.": "Нагрузочное тестирование в Jmeter.",
"26.": "Методология разработки Scrum.",
"27.": "Python. (Изучение основ. Создание клиент серверного приложения)."
}
 } 

 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m 'add 2 files'
git push

git commit preferences.json skills.json -m 'add 2 files'
git push

 16. На веб интерфейсе создать файл bug_report.json.
Создали

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сделали

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Модифицировали

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сделали
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull


XML
 21. Создать внешний репозиторий c названием XML.
Создали

 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/ArtyomMarfin/XML.git

 23. Внутри локального XML создать файл “new.xml”.
cd XML
touch new.xml

 24. Добавить файл под гит.
git add new.xml

 25. Закоммитить файл.
git commit -m "First commit XML"

 26. Отправить файл на внешний GitHub репозиторий.
git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
cat >> new.xml
<?xml version="1.0"?>
<About_me>
      <FirstName>Artyomy</FirstName>
      <LastName>Marfin</LastName>
      <DateOfBirth>18.04.1986</DateOfBirth>
      <NumberOfPets>0</NumberOfPets>
      <FutureDesiredSalary>1*10^5</FutureDesiredSalary>
     
</About_me>
ctrl+C

 28. Отправить изменения на внешний репозиторий.
git add new.xml
git commit -m "add text"
git push

 29. Создать файл preferences.xml
touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
cat >> preferences.json
<?xml version="1.0"?>
<About_me>
      <FavoriteMovie>Missing</FavoriteMovie>
      <FavouriteTVShow>Friends</FavouriteTVShow>
      <FavouriteFood>Borsch</FavouriteFood>
      <FavoriteTimeOfYear>Spring</FavoriteTimeOfYear>
      <CountryYouWouldLikeToVisit>All</CountryYouWouldLikeToVisit>
</About_me>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch sklls.xml

 32. Сделать коммит в одну строку.
git add . && git commit -am "add 2 files"

 33. Отправить сразу 2 файла на внешний репозиторий.
git push

 34. На веб интерфейсе создать файл bug_report.xml.
Создаем

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Делаем

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Модифицируем, добавляем

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Делаем

 38. Синхронизировать внешний и локальный репозиторий XML
git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
Создали

 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/ArtyomMarfin/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
touch new.txt

 4. Добавить файл под гит.
git add new.txt

 5. Закоммитить файл.
git commit -m "First commit"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat >> new.txt
ФИО: Марфин Артем Павлович,
Возраст: 36,
Количество домашних животных: 0,
Будущая желаемая заработная плата 1*10^5.
Ctrl+C

 8. Отправить изменения на внешний репозиторий.
git add new.txt
git commit -m "Edited new.txt"
git push

 9. Создать файл preferences.txt
touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
cat >> preferences.txt
Любимый фильм: "Фонтан",
Любимый сериал: ЭДрузья",
Любимая еда: на завтрак овсянка, яйца, сыр,
Любимое время года: Весна,
Сторона которую хотели бы посетить: Все.
Ctrl+C

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch skills.txt
cat >> skills.txt
1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
2. Что такое клиент-серверная архитектура.
3. HTTP Методы запросов на сервер.
4. Коды ответов HTTP сервера.
5. Структуры HTTP запросов и ответов.
6. Что такое JSON, XML. Их структура.
7. Тестирование API через Postman (JS, автотесты API).
8. Снятие и чтение логов c внешнего сервера.
9. Снифинг http web трафика через Charles и Fiddler.
10. Dev Tools веб браузеров (Google Chrome, FireFox).
11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
12. Мобильное тестирование.
13. Особенность iOS, Android, гайдлайны.
14. Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
15. Сборка Android приложений на Android Studio.
16. ADB (управление андройд девайсами).
17. Настройка прокси и vpn на iOS и Android.
18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
21. Доступ к удалённым серверам.
22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
23. База данных Postgres (установка, настройка и использование).
24. Нереляционная база данных Redis (установка, настройка и использование).
25. Нагрузочное тестирование в Jmeter.
26. Методология разработки Scrum.
27. Python. (Изучение основ. Создание клиент серверного приложения)
Ctrl+C

 12. Сделать коммит в одну строку.
git add . && git commit -am "add 2 files"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.
Создали

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сохранили

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Модифицировали, добавили

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Сделали, сохранили изменения

 18. Синхронизировать внешний и локальный репозиторий TXT
git pull